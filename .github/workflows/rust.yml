name: Build and Test Nova

on:
  merge_group:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - dev
      - 'feat/**'
      - release-candidate

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: short

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: buildjet-8vcpu-ubuntu-2204
    env:
      RUSTFLAGS: -D warnings
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: taiki-e/install-action@nextest
    - uses: Swatinem/rust-cache@v2
    - name: Check the minroot example compiles under the abomonate feature
      run: cargo check --profile dev-ci --features "abomonate" --examples
    - name: Check benches compile under the flamegraph feature
      run: cargo check --profile dev-ci --features "flamegraph" --benches
    - name: Build, with benches & examples
      run: cargo build --profile dev-ci --benches --examples 
    - name: Linux Tests in parallel, with nextest profile ci and cargo profile dev-ci
      run: |
        cargo nextest run --profile ci --workspace --cargo-profile dev-ci
    - name: Run test_pp_digest with the asm feature
      run: |
        cargo nextest run --profile ci --workspace --cargo-profile dev-ci --features "asm" -E 'test(test_pp_digest)'

  check-lurk-compiles:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: lurk-lab/ci-workflows
      - uses: ./.github/actions/ci-env
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: lurk-lab/lurk-rs
          path: ./lurk-rs
          submodules: recursive
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Patch Cargo.toml
        working-directory: ${{ github.workspace }}/lurk-rs
        run: |
          URL=https://github.com/lurk-lab/arecibo
          # the dependency we want to patch is usually the same as the package, but
          # we e.g. want to override dependency 'nova' with an 'arecibo' package
          DEPENDENCY=$(grep "git = \"$URL\"" Cargo.toml | awk '{ print $1 }')
          PACKAGE=$(grep "git = \"$URL\"" Cargo.toml | grep -oP 'package = "\K[^"]*'| cat)
          echo "[patch.'$URL']" >> Cargo.toml                                       
          if [ ! -z "$PACKAGE" ];                  
          then
            echo "$DEPENDENCY = { path='../', package='$PACKAGE' }" >> Cargo.toml
          else
            echo "$DEPENDENCY = { path='../' }" >> Cargo.toml                  
          fi
      - run: cat Cargo.toml | tail -3
      - name: Check Lurk-rs types don't break spectacularly
        working-directory: ${{ github.workspace }}/lurk-rs
        run: cargo check --workspace --tests --benches --examples

  # Wasm build, rustfmt, clippy, doctests, and MSRV
  code-quality:
    uses: lurk-lab/ci-workflows/.github/workflows/lints.yml@main

  # Check documentation links aren't broken
  link-checker:
    uses: lurk-lab/ci-workflows/.github/workflows/links-check.yml@main
    with: 
      fail-fast: true

  # Lint dependencies for licensing and auditing issues as per https://github.com/lurk-lab/arecibo/blob/main/deny.toml
  licenses-audits:
    uses: lurk-lab/ci-workflows/.github/workflows/licenses-audits.yml@main
